drop table PERSON cascade constraints;
drop table ORGANIZATION cascade constraints;
drop table ROLE cascade constraints;
drop table ROLE_USER cascade constraints;


drop sequence XUSER_SEQ;
drop sequence ORGANIZATION_SEQ;
drop sequence ROLES_SEQ;


create sequence XUSER_SEQ
increment by 1
start with 100
cache 20;


create sequence ORGANIZATION_SEQ
increment by 1
start with 100
cache 20;

create sequence ROLES_SEQ
increment by 1
start with 100
cache 20;



CREATE TABLE ORGANIZATION (
	ID 				INTEGER NOT NULL PRIMARY KEY, 
	NAME 				VARCHAR(30) NOT NULL, 
	DESCRIPTION 			VARCHAR(1000) NOT NULL,
	PARENT_ORG			INTEGER,
	CONSTRAINT ORG_PARENT_REF FOREIGN KEY(PARENT_ORG) REFERENCES ORGANIZATION(ID),
	CONSTRAINT UK_ORG_NAME unique (NAME)
); 


comment on table ORGANIZATION is
'Stores all information regarding a organization.';



CREATE TABLE ROLE (
	ID 				INTEGER NOT NULL PRIMARY KEY, 
	NAME 				VARCHAR(30) NOT NULL, 
	DESCRIPTION 			VARCHAR(1000) NOT NULL,
	PARENT_ROLE			INTEGER,
	CONSTRAINT ROLE_PARENT_REF FOREIGN KEY(PARENT_ROLE) REFERENCES ROLE(ID),
	CONSTRAINT UK_ROLE_NAME unique (NAME)
); 


comment on table ROLE is
'Stores all information regarding a role.';




CREATE TABLE XUSER (
	ID 				INTEGER NOT NULL PRIMARY KEY, 
	USERNAME 			VARCHAR(255) NOT NULL, 
	PASSWORD 			VARCHAR(255) NOT NULL,
	FIRST_NAME 			VARCHAR(255) NOT NULL, 
	MIDDLE_NAME 			VARCHAR(255), 
	LAST_NAME 			VARCHAR(255) NOT NULL, 
	ADDRESS 			VARCHAR2(255),
	DISPLAY_NAME 			VARCHAR(255) NOT NULL, 
	PRIMARY_EMAIL			VARCHAR(100) NOT NULL, 
	SECONDARY_EMAIL			VARCHAR(100), 
	PRIMARY_PHONE 			VARCHAR(20), 
	SECONDARY_PHONE			VARCHAR(20), 
	PRIMARY_MOBILE 			VARCHAR(20) NOT NULL, 
	SECONDARY_MOBILE		VARCHAR(20), 
	FAX 				VARCHAR(20), 
	MANAGERID 			INTEGER,
	ORGID 				INTEGER NOT NULL,
	USR_LOCKED           		VARCHAR2(1),
	USR_DISABLED         		VARCHAR2(1),
	USR_STATUS           		VARCHAR2(25),
	USR_LOGIN_ATTEMPTS_CTR 		NUMBER(19),
	USR_CHANGE_PWD_NEXT_LOGON 	VARCHAR2(1),
	USR_DATA_LEVEL       		NUMBER(1),
	USR_CREATE           		DATE,
	USR_CREATEBY         		NUMBER(19),
	USR_UPDATE           		DATE,
	USR_UPDATEBY         		NUMBER(19),
	CONSTRAINT MANAGER_ID_REF FOREIGN KEY(MANAGERID) REFERENCES XUSER(ID),
	CONSTRAINT ORG_ID_REF FOREIGN KEY(ORGID) REFERENCES ORGANIZATION(ID),
	CONSTRAINT UK_USER_NAME unique (USERNAME)

); 


comment on table XUSER is
'Stores all information regarding a user.';


CREATE TABLE ROLE_USER (
	USER_ID 			INTEGER NOT NULL, 
	ROLE_ID 			INTEGER NOT NULL,
  PRIMARY KEY (USER_ID, ROLE_ID),
	CONSTRAINT USER_REF FOREIGN KEY(USER_ID) REFERENCES XUSER(ID),
	CONSTRAINT ROLE_REF FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ID)

); 

comment on table ROLE_USER is
'Stores all information regarding a user role mapping.';


